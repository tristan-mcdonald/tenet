/*
    function for styling input placeholders.
    use this as follows, for example:
    ```
    input
        +placeholder()
            color tomato
    ```
*/
placeholder()
    &::-webkit-input-placeholder
        {block}
    &:-moz-placeholder
        {block}
    &::-moz-placeholder
        {block}
    &:-ms-input-placeholder
        {block}

/*
    function for a simple anchor underline which appears on interaction,
    for use against a light background.
*/
content-anchor(
    $initial-color               = $cl--anchor,
    $interaction-color           = $cl--anchor--interact,
    $initial-underline-color     = modify-hsla($color: $initial-color, $a: -.6),
    $interaction-underline-color = $interaction-color,
    $text-decoration-thickness   = $bw
)
    &
    &:visited
        transition($properties: "color, text-decoration-color")
        text-decoration underline
        text-decoration-color $initial-underline-color
        text-decoration-skip-ink auto
        text-decoration-thickness $text-decoration-thickness
        color $initial-color

        &:active
        &:focus
        &:hover
            text-decoration-color $interaction-underline-color
            color $interaction-color

/*
    function for a simple anchor underline which appears on interaction,
    for use against a dark background.
*/
content-anchor--dark-background(
    $initial-color               = alpha(white, .8),
    $interaction-color           = white,
    $initial-underline-color     = alpha(white, .4),
    $interaction-underline-color = alpha(white, .8)
)
    &
    &:visited
        transition($properties: "color, text-decoration-color")
        text-decoration underline
        text-decoration-color $initial-underline-color
        text-decoration-skip-ink auto
        text-decoration-thickness $bw--half
        text-underline-offset .1em
        color $initial-color

        &:active
        &:focus
        &:hover
            text-decoration-color $interaction-underline-color
            color $interaction-color

/*
    function for ensuring that long words don't break layout.
*/
break-long-words()
    overflow-wrap anywhere

/*
    function for a simple two-level text shadow.
*/
txsh-simple($shadow-color = $cl--text--heading)
    text-shadow 0 0 .02em $shadow-color, 0 0 .08em modify-hsla($color: $shadow-color, $a: -.6)

/*
    function to add padding above and below an element,
    which accounts for a font's differing baseline space above
    the ascender and below the descender. set `$space-greater-above`
    to `true` if the font appears to have a greater baseline
    space above the ascender than it does below the descender.
*/
pd-account-for-font-offset(
    $pd-vertical,
    $space-greater-above = true
)
    if $space-greater-above
        padding-top "calc(%s - %s)" % ($pd-vertical $ff-x-position-offset)
        padding-bottom "calc(%s + %s)" % ($pd-vertical $ff-x-position-offset)
    else
        padding-top "calc(%s + %s)" % ($pd-vertical $ff-x-position-offset)
        padding-bottom "calc(%s - %s)" % ($pd-vertical $ff-x-position-offset)
/*
    function to set typographic styles for the various heading levels.
    usage:
        display-as-heading($heading-level: 1)
*/
display-as-heading($heading-level)
    line-height $lh--heading
    font-family $ff--heading
    font-weight $fw--heading

    if $heading-level == 1
        max-width $maw--h1
        letter-spacing $ls--heading--one-two
        fz--plus-four()

        * + &
            sp-scale--four()

    else if $heading-level == 2
        max-width $maw--h2
        letter-spacing $ls--heading--one-two
        fz--plus-three()

        * + &
            sp-scale--three()

    else if $heading-level == 3
        max-width $maw--h3
        letter-spacing $ls--heading--three-four
        fz--plus-two()

        * + &
            sp-scale--two()

    else if $heading-level == 4
        max-width $maw--h4
        letter-spacing $ls--heading--three-four
        fz--plus-one()

        * + &
            sp-scale--one()
